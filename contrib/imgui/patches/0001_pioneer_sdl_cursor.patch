diff --git a/contrib/imgui/examples/imgui_impl_sdl.cpp b/contrib/imgui/examples/imgui_impl_sdl.cpp
index b725e0ac2..e10d29b43 100644
--- a/contrib/imgui/examples/imgui_impl_sdl.cpp
+++ b/contrib/imgui/examples/imgui_impl_sdl.cpp
@@ -165,6 +165,62 @@ bool ImGui_ImplSDL2_ProcessEvent(const SDL_Event* event)
     return false;
 }
 
+// The Pioneer cursor.
+static const char mouse_cursor[] = {
+	"XXXXXXXXXX              "
+	"X.........X             "
+	"X..........X            "
+	"X...........X           "
+	"X............X          "
+	"X.............X         "
+	"X..............X        "
+	"X...............X       "
+	"X................X      "
+	"X.................X     "
+	" X.................X    "
+	"  X..........    ...X   "
+	"   X........      ...X  "
+	"    X......        ...X "
+	"     X.....        ....X"
+	"      X....        ...X "
+	"       X...        ..X  "
+	"        X...      ..X   "
+	"         X...    ..X    "
+	"          X.......X     "
+	"           X.....X      "
+	"            X...X       "
+	"             X.X        "
+	"              X         "
+};
+
+// Shamelessly adapted from the SDL wiki, who stole it from the mailing list.
+// Create the pioneer cursor in SDL's preferred format.
+static SDL_Cursor* CreatePioneerCursor()
+{
+	int i = -1;
+	// Cursor data is stored as bitfields in most-significant-bit first order.
+	Uint8 data[3*24];
+	Uint8 mask[3*24];
+	for (int row = 0; row < 24; ++row) {
+		for (int col = 0; col < 24; ++col) {
+			if (col % 8) {
+				data[i] <<= 1;
+				mask[i] <<= 1;
+			} else {
+				i++;
+				data[i] = mask[i] = 0; // clear the next byte.
+			}
+			switch (mouse_cursor[row*24 + col]) {
+			// Use fallthrough here because it makes sense.
+			case 'X': data[i] |= 0x01;
+			case '.': mask[i] |= 0x01;
+			default: break;
+			}
+		}
+	}
+	return SDL_CreateCursor(data, mask, 24, 24, 0, 0);
+}
+
 static bool ImGui_ImplSDL2_Init(SDL_Window* window)
 {
     ImGuiIO& io = ImGui::GetIO();
@@ -220,7 +276,7 @@ static bool ImGui_ImplSDL2_Init(SDL_Window* window)
     io.ClipboardUserData = NULL;
 
     // Load mouse cursors
-    bd->MouseCursors[ImGuiMouseCursor_Arrow] = SDL_CreateSystemCursor(SDL_SYSTEM_CURSOR_ARROW);
+    bd->MouseCursors[ImGuiMouseCursor_Arrow] = CreatePioneerCursor();
     bd->MouseCursors[ImGuiMouseCursor_TextInput] = SDL_CreateSystemCursor(SDL_SYSTEM_CURSOR_IBEAM);
     bd->MouseCursors[ImGuiMouseCursor_ResizeAll] = SDL_CreateSystemCursor(SDL_SYSTEM_CURSOR_SIZEALL);
     bd->MouseCursors[ImGuiMouseCursor_ResizeNS] = SDL_CreateSystemCursor(SDL_SYSTEM_CURSOR_SIZENS);
@@ -315,8 +371,11 @@ static void ImGui_ImplSDL2_UpdateMousePosAndButtons()
     io.MouseDown[2] = bd->MousePressed[2] || (mouse_buttons & SDL_BUTTON(SDL_BUTTON_MIDDLE)) != 0;
     bd->MousePressed[0] = bd->MousePressed[1] = bd->MousePressed[2] = false;
 
-    // Obtain focused and hovered window. We forward mouse input when focused or when hovered (and no other window is capturing)
-#if SDL_HAS_CAPTURE_AND_GLOBAL_MOUSE
+// Using this code-path causes several issues in Pioneer - when capturing the
+// mouse, the mouse snaps back to the center of the window, and there are some
+// issues with the WM's decoration extents being calculated into the window's
+// size on the Cinammon DE.
+#if 0 // SDL_HAS_CAPTURE_AND_GLOBAL_MOUSE
     SDL_Window* focused_window = SDL_GetKeyboardFocus();
     SDL_Window* hovered_window = SDL_HAS_MOUSE_FOCUS_CLICKTHROUGH ? SDL_GetMouseFocus() : NULL; // This is better but is only reliably useful with SDL 2.0.5+ and SDL_HINT_MOUSE_FOCUS_CLICKTHROUGH.
     SDL_Window* mouse_window = NULL;
diff --git a/contrib/imgui/examples/imgui_impl_sdl.h b/contrib/imgui/examples/imgui_impl_sdl.h
index d2439eb7b..b8697dd1a 100644
--- a/contrib/imgui/examples/imgui_impl_sdl.h
+++ b/contrib/imgui/examples/imgui_impl_sdl.h
@@ -16,7 +16,7 @@
 // Read online: https://github.com/ocornut/imgui/tree/master/docs
 
 #pragma once
-#include "imgui.h"      // IMGUI_IMPL_API
+#include "imgui/imgui.h"      // IMGUI_IMPL_API
 
 struct SDL_Window;
 typedef union SDL_Event SDL_Event;
